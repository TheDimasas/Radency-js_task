{"version":3,"sources":["core/helper.ts","core/notes.slice.ts","core/data.ts","core/dialog.slice.ts","core/store.ts","components/Icon.tsx","components/NoteRow.tsx","components/Table.tsx","views/NotesTable.tsx","components/CategoryRow.tsx","views/CategoriesTable.tsx","components/Dialog.tsx","views/MainView.tsx","App.tsx","index.tsx"],"names":["getDates","text","Array","from","Set","match","join","initialState","notes","id","name","created","category","content","dates","archived","notesSlice","createSlice","reducers","setNotes","state","action","payload","createNote","note","Date","now","toString","toLocaleString","month","day","getFullYear","push","updateNote","find","item","deleteNote","filter","changeStatusNote","actions","selectNotes","selectActive","createSelector","selectArchive","selectStatistic","reduce","acc","cat","active","dialogSlice","isOpen","mode","noteId","openDialog","closeDialog","selectDialog","dialog","selectIsOpen","selectMode","selectNoteId","store","configureStore","reducer","notesReducer","dialogReducer","icons","Task","className","Idea","Quote","Icon","NoteRow","isArchive","dispatch","useDispatch","archiveIcon","onClick","Table","columns","data","renderRow","headClassName","map","col","colSpan","title","el","NotesTable","useState","updateStatus","useSelector","archive","useMemo","CategoryRow","CategoriesTable","categories","Dialog","error","setError","setName","setCategory","setContent","dialogRef","useRef","useEffect","current","showModal","close","resetForm","ref","method","onSubmit","event","preventDefault","formData","trim","onChange","htmlFor","value","autoComplete","required","e","target","wrap","maxLength","cols","rows","type","MainView","App","rootElement","document","getElementById","render"],"mappings":"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","file":"static/js/main.6b334946.chunk.js","sourcesContent":["export const getDates = (text: string): string =>\r\n  [\r\n    Array.from(\r\n      new Set(text?.match(/([1-9]|[12]\\d|3[01])\\/([1-9]|1[0-2])\\/[12]\\d{3}/g))\r\n    ),\r\n  ]?.join(', ');\r\n\r\nexport const getCreatedDate = (): string =>\r\n  `${new Date().toLocaleString('en', {\r\n    month: 'long',\r\n    day: '2-digit',\r\n  })}, ${new Date().getFullYear()} `;\r\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\n\r\nimport { CategoryStatictic, Note } from './interfaces';\r\nimport {\r\n  CreateNoteActionPayload,\r\n  UpdateNoteActionPayload,\r\n} from './actions.interfaces';\r\nimport { Notes } from './data';\r\nimport { RootState } from './store';\r\nimport { getCreatedDate, getDates } from './helper';\r\n\r\ninterface NotesState {\r\n  notes: Note[];\r\n}\r\n\r\nconst initialState: NotesState = {\r\n  notes: Notes,\r\n};\r\n\r\nexport const notesSlice = createSlice({\r\n  name: 'notes',\r\n  initialState,\r\n  reducers: {\r\n    setNotes: (state, action: PayloadAction<Note[]>) => {\r\n      state.notes = action.payload;\r\n    },\r\n    createNote: (state, action: PayloadAction<CreateNoteActionPayload>) => {\r\n      const note: Note = {\r\n        ...action.payload,\r\n        id: Date.now().toString(),\r\n        created: getCreatedDate(),\r\n        dates: getDates(action.payload.content),\r\n        archived: false,\r\n      };\r\n      state.notes.push(note);\r\n    },\r\n    updateNote: (state, action: PayloadAction<UpdateNoteActionPayload>) => {\r\n      const note = state.notes.find((item) => item.id === action.payload.id);\r\n\r\n      if (note) {\r\n        note.name = action.payload.name;\r\n        note.category = action.payload.category;\r\n        note.content = action.payload.content;\r\n        note.dates = getDates(note.content);\r\n      }\r\n    },\r\n    deleteNote: (state, action: PayloadAction<string>) => {\r\n      state.notes = state.notes.filter((note) => note.id !== action.payload);\r\n    },\r\n    changeStatusNote: (state, action: PayloadAction<string>) => {\r\n      const note = state.notes.find((note) => note.id === action.payload);\r\n\r\n      if (note) {\r\n        note.archived = !note.archived;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  setNotes,\r\n  createNote,\r\n  updateNote,\r\n  deleteNote,\r\n  changeStatusNote,\r\n} = notesSlice.actions;\r\n\r\nexport const selectNotes = (state: RootState) => state.notes.notes;\r\n\r\nexport const selectNote = (id: string) =>\r\n  createSelector(selectNotes, (notes) => notes.find((item) => item.id === id));\r\n\r\nexport const selectActive = createSelector(selectNotes, (notes) =>\r\n  notes.filter((item) => !item.archived)\r\n);\r\n\r\nexport const selectArchive = createSelector(selectNotes, (notes) =>\r\n  notes.filter((item) => item.archived)\r\n);\r\n\r\nexport const selectStatistic = createSelector(selectNotes, (notes) =>\r\n  notes.reduce<CategoryStatictic[]>((acc, note) => {\r\n    const category = acc.find((cat) => cat.name === note.category);\r\n\r\n    if (!category) {\r\n      return [\r\n        ...acc,\r\n        {\r\n          name: note.category,\r\n          active: note.archived ? 0 : 1,\r\n          archived: note.archived ? 1 : 0,\r\n        },\r\n      ];\r\n    }\r\n\r\n    note.archived ? category.archived++ : category.active++;\r\n    return acc;\r\n  }, [])\r\n);\r\n\r\nexport default notesSlice.reducer;\r\n","import { Note } from './interfaces';\r\n\r\nexport const Notes: Note[] = [\r\n  {\r\n    id: '1634034106634',\r\n    name: 'Shopping list',\r\n    created: 'April 20, 2021',\r\n    category: 'Task',\r\n    content:\r\n      'Proin lobortis ligula et convallis scelerisque. Vivamus eget quam et urna tincidunt vehicula. Etiam imperdiet tincidunt laoreet.',\r\n    dates: '',\r\n    archived: true,\r\n  },\r\n  {\r\n    id: '1634034114519',\r\n    name: 'The Theory of evolution',\r\n    created: 'April 27, 2021',\r\n    category: 'Random Thought',\r\n    content:\r\n      'Lorem ipsum dolor sit amet, consectetur adipiscing elit. In rhoncus elit erat 28/9/2021, a vestibulum velit cursus sit amet. Fusce porttitor scelerisque mattis.',\r\n    dates: '28/9/2021',\r\n    archived: true,\r\n  },\r\n  {\r\n    id: '1634034122100',\r\n    name: 'New Feature',\r\n    created: 'May 05, 2021',\r\n    category: 'Idea',\r\n    content:\r\n      \"I'm gonna have a dentist appointment on the 3/5/2021, I moved it from 5/5/2021\",\r\n    dates: '3/5/2021, 5/5/2021',\r\n    archived: false,\r\n  },\r\n  {\r\n    id: '1634034136495',\r\n    name: 'William Gaddis',\r\n    created: 'May 07, 2021',\r\n    category: 'Quote',\r\n    content:\r\n      'Sed dapibus, nulla vitae consequat volutpat, libero velit pellentesque sapien 1/10/2021, vel consectetur elit tellus blandit neque.',\r\n    dates: '1/10/2021',\r\n    archived: false,\r\n  },\r\n  {\r\n    id: '1634034144535',\r\n    name: 'Radency',\r\n    created: 'May 11, 2021',\r\n    category: 'Idea',\r\n    content:\r\n      'Donec sit amet placerat enim. Ut gravida risus vel quam hendrerit vulputate. Etiam viverra laoreet justo, vitae bibendum justo vulputate sed. Nullam quis iaculis nunc.',\r\n    dates: '',\r\n    archived: false,\r\n  },\r\n  {\r\n    id: '1634034152617',\r\n    name: 'Purchases',\r\n    created: 'May 13, 2021',\r\n    category: 'Task',\r\n    content:\r\n      'Vestibulum libero risus, bibendum volutpat blandit placerat, convallis nec libero 11/10/2021. Nunc interdum consectetur sapien laoreet egestas 9/10/2021. Fusce at justo velit.',\r\n    dates: '11/10/2021, 9/10/2021',\r\n    archived: false,\r\n  },\r\n  {\r\n    id: '1634034161594',\r\n    name: 'Books',\r\n    created: 'May 15, 2021',\r\n    category: 'Task',\r\n    content:\r\n      'Donec sapien ligula, tempor vitae urna at, congue rutrum metus. Vestibulum quis elit purus. Integer a tellus sit amet sapien scelerisque scelerisque nec eu ante.',\r\n    dates: '',\r\n    archived: false,\r\n  },\r\n];\r\n","import { createSelector, createSlice, PayloadAction } from '@reduxjs/toolkit';\r\nimport { OpenModalActionPayload } from './actions.interfaces';\r\n\r\nimport { RootState } from './store';\r\n\r\nexport type DialogMode = 'create' | 'edit';\r\n\r\ninterface DialogState {\r\n  isOpen: boolean;\r\n  mode: DialogMode;\r\n  noteId: string;\r\n}\r\n\r\nconst initialState: DialogState = {\r\n  isOpen: false,\r\n  mode: 'create',\r\n  noteId: '',\r\n};\r\n\r\nexport const dialogSlice = createSlice({\r\n  name: 'dialog',\r\n  initialState,\r\n  reducers: {\r\n    openDialog: (state, action: PayloadAction<OpenModalActionPayload>) => {\r\n      state.isOpen = true;\r\n      state.mode = action.payload.mode;\r\n      state.noteId = action.payload.noteId;\r\n    },\r\n    closeDialog: (state) => {\r\n      state.isOpen = false;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { openDialog, closeDialog } = dialogSlice.actions;\r\n\r\nexport const selectDialog = (state: RootState) => state.dialog;\r\n\r\nexport const selectIsOpen = createSelector(\r\n  selectDialog,\r\n  (dialog) => dialog.isOpen\r\n);\r\n\r\nexport const selectMode = createSelector(selectDialog, (dialog) => dialog.mode);\r\n\r\nexport const selectNoteId = createSelector(\r\n  selectDialog,\r\n  (dialog) => dialog.noteId\r\n);\r\n\r\nexport default dialogSlice.reducer;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport notesReducer from './notes.slice';\r\nimport dialogReducer from './dialog.slice';\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    notes: notesReducer,\r\n    dialog: dialogReducer,\r\n  },\r\n});\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n\r\nexport default store;\r\n","const icons: {\r\n  [key: string]: any;\r\n} = {\r\n  Task: <i className='bi bi-basket'></i>,\r\n  'Random Thought': <i className='bi bi-puzzle'></i>,\r\n  Idea: <i className='bi bi-lightbulb'></i>,\r\n  Quote: <i className='bi bi-chat-quote'></i>,\r\n};\r\n\r\ninterface IconProps {\r\n  category: string;\r\n}\r\n\r\nconst Icon: React.FC<IconProps> = ({ category }) => {\r\n  return <div className='circle'>{icons[category]}</div>;\r\n};\r\n\r\nexport default Icon;\r\n","import { useDispatch } from 'react-redux';\r\n\r\nimport { Note } from '../core/interfaces';\r\nimport { openDialog } from '../core/dialog.slice';\r\nimport { changeStatusNote, deleteNote } from '../core/notes.slice';\r\n\r\nimport Icon from './Icon';\r\n\r\ninterface NoteRowProps {\r\n  note: Note;\r\n  isArchive: boolean;\r\n}\r\n\r\nconst NoteRow: React.FC<NoteRowProps> = ({ note, isArchive }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const archiveIcon = isArchive ? (\r\n    <i className='bi bi-box-arrow-in-up'></i>\r\n  ) : (\r\n    <i className='bi bi-box-arrow-in-down'></i>\r\n  );\r\n\r\n  const openModal = () => {\r\n    dispatch(openDialog({ mode: 'edit', noteId: note.id }));\r\n  };\r\n\r\n  return (\r\n    <tr>\r\n      <td className='logo'>\r\n        <Icon category={note.category} />\r\n      </td>\r\n      <td>{note.name}</td>\r\n      <td>{note.created}</td>\r\n      <td>{note.category}</td>\r\n      <td>{note.content}</td>\r\n      <td>{note.dates}</td>\r\n      <td className='icon' onClick={openModal}>\r\n        <i className='bi bi-pencil-fill'></i>\r\n      </td>\r\n      <td className='icon' onClick={() => dispatch(changeStatusNote(note.id))}>\r\n        {archiveIcon}\r\n      </td>\r\n      <td className='icon' onClick={() => dispatch(deleteNote(note.id))}>\r\n        <i className='bi bi-trash-fill'></i>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default NoteRow;\r\n","export interface TableColumn {\r\n  title: string | JSX.Element;\r\n  className?: string;\r\n  id: string;\r\n  colSpan?: number;\r\n}\r\n\r\nexport interface TableProps {\r\n  columns: TableColumn[];\r\n  data: any[];\r\n  renderRow: (el: any) => JSX.Element;\r\n  headClassName?: string;\r\n}\r\n\r\nconst Table: React.FC<TableProps> = ({\r\n  columns,\r\n  data,\r\n  renderRow,\r\n  headClassName,\r\n}) => {\r\n  return (\r\n    <table>\r\n      <thead className={headClassName}>\r\n        <tr>\r\n          {columns.map((col) => (\r\n            <th\r\n              key={col.id}\r\n              id={col.id}\r\n              className={col.className}\r\n              colSpan={col.colSpan}\r\n            >\r\n              {col.title}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n      <tbody>{data.map((el: any) => renderRow(el))}</tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import { useMemo, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Note } from '../core/interfaces';\r\nimport { selectActive, selectArchive } from '../core/notes.slice';\r\n\r\nimport NoteRow from '../components/NoteRow';\r\nimport Table, { TableColumn } from '../components/Table';\r\n\r\nconst NotesTable = () => {\r\n  const [isArchive, updateStatus] = useState(false);\r\n\r\n  const active = useSelector(selectActive);\r\n  const archive = useSelector(selectArchive);\r\n\r\n  const columns: TableColumn[] = useMemo(\r\n    () => [\r\n      {\r\n        id: '1',\r\n        title: '',\r\n        className: 'logo',\r\n      },\r\n      {\r\n        id: '2',\r\n        title: 'Name',\r\n      },\r\n      {\r\n        id: '3',\r\n        title: 'Created',\r\n      },\r\n      {\r\n        id: '4',\r\n        title: 'Category',\r\n      },\r\n      {\r\n        id: '5',\r\n        title: 'Content',\r\n      },\r\n      {\r\n        id: '6',\r\n        title: 'Dates',\r\n      },\r\n      {\r\n        id: '7',\r\n        title: (\r\n          <div onClick={() => updateStatus((isArchive) => !isArchive)}>\r\n            <i className='bi bi-arrow-repeat'></i>\r\n            {isArchive ? 'Archive' : 'Active'} Notes\r\n          </div>\r\n        ),\r\n        className: 'toggle',\r\n        colSpan: 3,\r\n      },\r\n    ],\r\n    [isArchive]\r\n  );\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      data={isArchive ? archive : active}\r\n      renderRow={(el: Note) => (\r\n        <NoteRow key={el.id} note={el} isArchive={isArchive} />\r\n      )}\r\n      headClassName='list-head'\r\n    />\r\n  );\r\n};\r\n\r\nexport default NotesTable;\r\n","import { CategoryStatictic } from '../core/interfaces';\r\nimport Icon from './Icon';\r\n\r\ninterface CategoryRowProps {\r\n  category: CategoryStatictic;\r\n}\r\n\r\nconst CategoryRow: React.FC<CategoryRowProps> = ({ category }) => {\r\n  return (\r\n    <tr>\r\n      <td className='logo'>\r\n        <Icon category={category.name} />\r\n      </td>\r\n      <td>{category.name}</td>\r\n      <td>{category.active}</td>\r\n      <td>{category.archived}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default CategoryRow;\r\n","import { useSelector } from 'react-redux';\r\n\r\nimport CategoryRow from '../components/CategoryRow';\r\nimport Table, { TableColumn } from '../components/Table';\r\nimport { CategoryStatictic } from '../core/interfaces';\r\nimport { selectStatistic } from '../core/notes.slice';\r\n\r\nconst columns: TableColumn[] = [\r\n  {\r\n    id: '1',\r\n    title: '',\r\n    className: 'logo',\r\n  },\r\n  {\r\n    id: '2',\r\n    title: 'Category',\r\n  },\r\n  {\r\n    id: '3',\r\n    title: 'Active',\r\n  },\r\n  {\r\n    id: '4',\r\n    title: 'Archived',\r\n  },\r\n];\r\n\r\nconst CategoriesTable = () => {\r\n  const categories = useSelector(selectStatistic);\r\n\r\n  return (\r\n    <Table\r\n      columns={columns}\r\n      data={categories}\r\n      renderRow={(el: CategoryStatictic) => (\r\n        <CategoryRow key={el.name} category={el} />\r\n      )}\r\n      headClassName='statistics-head'\r\n    />\r\n  );\r\n};\r\n\r\nexport default CategoriesTable;\r\n","import { FormEvent, useEffect, useRef, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport {\r\n  closeDialog,\r\n  selectIsOpen,\r\n  selectMode,\r\n  selectNoteId,\r\n} from '../core/dialog.slice';\r\nimport { createNote, selectNote, updateNote } from '../core/notes.slice';\r\n\r\nconst Dialog: React.FC = () => {\r\n  const [error, setError] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [content, setContent] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const isOpen = useSelector(selectIsOpen);\r\n  const mode = useSelector(selectMode);\r\n  const noteId = useSelector(selectNoteId);\r\n  const note = useSelector(selectNote(noteId));\r\n  // HTMLDialogElement is deprecated(experimental)\r\n  const dialogRef = useRef<any>(null);\r\n\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      dialogRef.current?.showModal();\r\n      if (mode === 'edit' && note) {\r\n        setName(note.name);\r\n        setCategory(note.category);\r\n        setContent(note.content);\r\n      }\r\n    } else {\r\n      dialogRef.current?.close();\r\n    }\r\n  }, [isOpen, note, mode]);\r\n\r\n  const resetForm = () => {\r\n    dispatch(closeDialog());\r\n    setError('');\r\n    setName('');\r\n    setCategory('');\r\n    setContent('');\r\n  };\r\n\r\n  const handleSubmit = (event: FormEvent) => {\r\n    event.preventDefault();\r\n\r\n    const formData = { name, category: category || 'Task', content };\r\n\r\n    if (!formData.name.trim() || !formData.content.trim()) {\r\n      setError('Please fill the form.');\r\n      return;\r\n    }\r\n\r\n    if (mode === 'edit') {\r\n      dispatch(updateNote({ ...formData, id: noteId }));\r\n    } else {\r\n      dispatch(createNote({ ...formData }));\r\n    }\r\n\r\n    resetForm();\r\n  };\r\n\r\n  return (\r\n    <dialog ref={dialogRef} className='dialog'>\r\n      <form\r\n        method='dialog'\r\n        className='form'\r\n        onSubmit={handleSubmit}\r\n        onChange={() => {\r\n          setError('');\r\n        }}\r\n      >\r\n        <label htmlFor='name'>Note name:</label>\r\n        <input\r\n          value={name}\r\n          name='name'\r\n          id='name'\r\n          autoComplete='off'\r\n          required\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <section>\r\n          <p>\r\n            <label htmlFor='category'>Choose category:</label>\r\n            <select\r\n              value={category}\r\n              id='category'\r\n              name='category'\r\n              onChange={(e) => setCategory(e.target.value)}\r\n              required\r\n            >\r\n              <option value='Task'>Task</option>\r\n              <option value='Random Thought'>Random Thought</option>\r\n              <option value='Idea'>Idea</option>\r\n              <option value='Quote'>Quote</option>\r\n            </select>\r\n          </p>\r\n        </section>\r\n        <p>Note content:</p>\r\n        <textarea\r\n          name='content'\r\n          id='content'\r\n          wrap='soft'\r\n          maxLength={200}\r\n          cols={40}\r\n          rows={5}\r\n          value={content}\r\n          onChange={(e) => setContent(e.target.value)}\r\n          required\r\n        ></textarea>\r\n        <p className='error-message'>{error}</p>\r\n        <menu>\r\n          <button className='cancel' type='reset' onClick={resetForm}>\r\n            Cancel\r\n          </button>\r\n          <button className='submit' type='submit'>\r\n            Confirm\r\n          </button>\r\n        </menu>\r\n      </form>\r\n    </dialog>\r\n  );\r\n};\r\n\r\nexport default Dialog;\r\n","import NotesTable from '../views/NotesTable';\r\nimport CategoriesTable from '../views/CategoriesTable';\r\n\r\nimport Dialog from '../components/Dialog';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openDialog } from '../core/dialog.slice';\r\n\r\nconst MainView: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className='App'>\r\n      <NotesTable />\r\n      <div className='wrapper'>\r\n        <button\r\n          onClick={() => dispatch(openDialog({ mode: 'create', noteId: '' }))}\r\n        >\r\n          Create Note\r\n        </button>\r\n      </div>\r\n      <Dialog />\r\n      <CategoriesTable />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainView;\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport './styles.css';\r\n\r\nimport store from './core/store';\r\nimport MainView from './views/MainView';\r\n\r\nexport default function App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <MainView />\r\n    </Provider>\r\n  );\r\n}\r\n","import { render } from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nconst rootElement = document.getElementById('root');\r\nrender(<App />, rootElement);\r\n"],"sourceRoot":""}